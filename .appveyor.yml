environment:
  PROJECT_NAME: "cu2qu"
  PROJECT_VERSION: "1.6.6"
  CU2QU_WITH_CYTHON: 1
  TOXENV: "py-cy"
  TWINE_USERNAME: "anthrotype"
  TWINE_PASSWORD:
    secure: 9zLozI+1vEqeYX/OmuDcow==
  matrix:
    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.6"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8"
      PYTHON_ARCH: "32"

# matrix:
#   fast_finish: true

init:
  - "ECHO %PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"

install:
  # checkout git sub-modules
  - git submodule update --init --recursive

  # prepend newly installed Python to the PATH
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # upgrade pip to avoid out-of-date warnings
  - python -m pip install --disable-pip-version-check --upgrade pip
  - pip --version

  # install build requirements
  - pip install --upgrade setuptools cython wheel

  # build wheel from the sdist published on PyPI
  - pip wheel --no-deps --no-cache-dir --wheel-dir dist --no-binary %PROJECT_NAME% "%PROJECT_NAME%==%PROJECT_VERSION%"

  # get the full path to the compiled wheel (ugly but works)
  - dir /s /b dist\cu2qu*.whl > wheel.pth
  - set /p WHEEL_PATH=<wheel.pth

  # install wheel
  - pip install %WHEEL_PATH%

build: false

test_script:
  - python -c "import cu2qu; print(cu2qu.__version__)"

on_success:
  # Deploy wheels on tags to PyPI
  - ps: >-
      if($env:APPVEYOR_REPO_TAG -eq 'true') {
        Write-Output ("Deploying " + $env:APPVEYOR_REPO_TAG_NAME + " to PyPI...")
        pip install --upgrade twine
        twine upload $env:WHEEL_PATH
      } else {
        Write-Output "Not deploying as this is not a tagged commit"
      }

artifacts:
  # archive the generated packages in the ci.appveyor.com build report
  - path: dist\*
